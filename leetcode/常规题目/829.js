/*
829. 连续整数求和
    给定一个正整数 N，试求有多少组连续正整数满足所有数字之和为 N?
示例 1:
    输入: 5
    输出: 2
    解释: 5 = 5 = 2 + 3，共有两组连续整数([5],[2,3])求和后为 5。
示例 2:
    输入: 9
    输出: 3
    解释: 9 = 9 = 4 + 5 = 2 + 3 + 4
示例 3:
    输入: 15
    输出: 4
    解释: 15 = 15 = 8 + 7 = 4 + 5 + 6 = 1 + 2 + 3 + 4 + 5
说明: 1 <= N <= 10 ^ 9
*/
/**
 * n = a + (a + 1) + ... + (a + b + 1)
 * a = (2n / b - (b - 1)) / 2
 * 所有的除法都要被整除
 * a > 0
 * b 是 2n 的约数
 * 2n > b(b - 1)
 * @param {number} n
 * @return {number}
 */
var consecutiveNumbersSum = function(n) {
    let res = 0
    for(let b = 1; b * (b - 1) < 2 * n; b++){
        if(2 * n % b == 0 && (2 * n / b - (b - 1)) % 2 == 0) res++
    }
    return res
};